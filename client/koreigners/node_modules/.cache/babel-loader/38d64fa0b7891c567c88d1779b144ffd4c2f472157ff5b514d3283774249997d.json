{"ast":null,"code":"var _jsxFileName = \"/Users/billyboy/Documents/dev/react/project-os/client/koreigners/src/components/Discuss.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../styles/styles.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Discuss() {\n  _s();\n  const [listOfPosts, setListofPosts] = useState([]);\n  useEffect(() => {\n    axios.post(\"http://localhost:3001/discuss/getAll\").then(response => {\n      setListofPosts(response.data);\n    });\n  }, []);\n  const groupedPosts = {};\n\n  // Group posts by type\n  listOfPosts.forEach(post => {\n    if (!groupedPosts[post.type]) {\n      groupedPosts[post.type] = [];\n    }\n    groupedPosts[post.type].push(post);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: Object.keys(groupedPosts).map(type => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), groupedPosts[type].map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/addDiscuss\",\n        role: \"button\",\n        children: \"Add a Discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Discuss, \"uINmOlA7neZ7vBnLfklDJ3FyKnw=\");\n_c = Discuss;\nvar _c;\n$RefreshReg$(_c, \"Discuss\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","Discuss","_s","listOfPosts","setListofPosts","post","then","response","data","groupedPosts","forEach","type","push","className","children","Object","keys","map","fileName","_jsxFileName","lineNumber","columnNumber","title","id","to","role","_c","$RefreshReg$"],"sources":["/Users/billyboy/Documents/dev/react/project-os/client/koreigners/src/components/Discuss.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../styles/styles.css\"\nimport axios from 'axios';\n\nexport default function Discuss() {\n    const [listOfPosts, setListofPosts] = useState([]);\n\n    useEffect(() => {\n        axios.post(\"http://localhost:3001/discuss/getAll\").then((response) => {\n            setListofPosts(response.data);\n        })\n    }, []);\n\n    const groupedPosts = {};\n\n    // Group posts by type\n    listOfPosts.forEach(post => {\n        if (!groupedPosts[post.type]) {\n            groupedPosts[post.type] = [];\n        }\n        groupedPosts[post.type].push(post);\n    });\n\n    return (\n        <div className=\"container\">\n            {Object.keys(groupedPosts).map(type => (\n                <article key={type}>\n                    <h1>{type}</h1>\n                    {groupedPosts[type].map(post => (\n                        <article key={post.id}>\n                            <h2>{post.title}</h2>\n                            {/* Display other post details as needed */}\n                        </article>\n                    ))}\n                    <Link to=\"/addDiscuss\" role='button'>Add a Discussion</Link>\n                </article>\n            ))}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZG,KAAK,CAACO,IAAI,CAAC,sCAAsC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAClEH,cAAc,CAACG,QAAQ,CAACC,IAAI,CAAC;IACjC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAG,CAAC,CAAC;;EAEvB;EACAN,WAAW,CAACO,OAAO,CAACL,IAAI,IAAI;IACxB,IAAI,CAACI,YAAY,CAACJ,IAAI,CAACM,IAAI,CAAC,EAAE;MAC1BF,YAAY,CAACJ,IAAI,CAACM,IAAI,CAAC,GAAG,EAAE;IAChC;IACAF,YAAY,CAACJ,IAAI,CAACM,IAAI,CAAC,CAACC,IAAI,CAACP,IAAI,CAAC;EACtC,CAAC,CAAC;EAEF,oBACIL,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBC,MAAM,CAACC,IAAI,CAACP,YAAY,CAAC,CAACQ,GAAG,CAACN,IAAI,iBAC/BX,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKH;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACdZ,YAAY,CAACE,IAAI,CAAC,CAACM,GAAG,CAACZ,IAAI,iBACxBL,OAAA;QAAAc,QAAA,eACId,OAAA;UAAAc,QAAA,EAAKT,IAAI,CAACiB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADXhB,IAAI,CAACkB,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACZ,CAAC,eACFrB,OAAA,CAACH,IAAI;QAAC2B,EAAE,EAAC,aAAa;QAACC,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GARlDV,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAST,CACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACnB,EAAA,CAnCuBD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}