{"ast":null,"code":"var _jsxFileName = \"/Users/billyboy/Documents/dev/react/project-os/client/koreigners/src/components/PostsByType.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostsByType() {\n  _s();\n  const {\n    type\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPostsByType = async () => {\n      try {\n        const response = await axios.post(`http://localhost:3001/discuss/getByType`, {\n          type\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.error(error);\n        // Handle errors as needed\n      }\n    };\n    fetchPostsByType();\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"All Posts - \", type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"post\",\n      children: /*#__PURE__*/_jsxDEV(\"hgroup\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"by \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PostsByType, \"HkahJZkoljEtpIPQcXaIaEsmUCs=\", false, function () {\n  return [useParams];\n});\n_c = PostsByType;\nvar _c;\n$RefreshReg$(_c, \"PostsByType\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","PostsByType","_s","type","posts","setPosts","fetchPostsByType","response","post","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","class","title","username","id","_c","$RefreshReg$"],"sources":["/Users/billyboy/Documents/dev/react/project-os/client/koreigners/src/components/PostsByType.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nexport default function PostsByType() {\n  const { type } = useParams();\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchPostsByType = async () => {\n      try {\n        const response = await axios.post(`http://localhost:3001/discuss/getByType`, { type });\n        setPosts(response.data);\n      } catch (error) {\n        console.error(error);\n        // Handle errors as needed\n      }\n    };\n\n    fetchPostsByType();\n  }, [type]);\n\n  \n  return (\n    <div className=\"container\">\n      <h1>All Posts - {type}</h1>\n      {posts.map(post => (\n        <div class=\"post\" key={post.id}>\n          <hgroup>\n            <h4>{post.title}</h4>\n            <h4>by {post.username}</h4>\n          </hgroup>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAE,yCAAwC,EAAE;UAAEL;QAAK,CAAC,CAAC;QACtFE,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB;MACF;IACF,CAAC;IAEDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAGV,oBACEH,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAAa,QAAA,GAAI,cAAY,EAACV,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1Bb,KAAK,CAACc,GAAG,CAACV,IAAI,iBACbR,OAAA;MAAKmB,KAAK,EAAC,MAAM;MAAAN,QAAA,eACfb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKL,IAAI,CAACY;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBjB,OAAA;UAAAa,QAAA,GAAI,KAAG,EAACL,IAAI,CAACa,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC,GAJYT,IAAI,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKzB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CAhCuBD,WAAW;EAAA,QAChBH,SAAS;AAAA;AAAAyB,EAAA,GADJtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}